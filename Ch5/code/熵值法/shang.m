function [s,w]=shang(x)
% 函数shang.m, 实现用熵值法求各指标(列）的权重及各数据行的得分
% x为原始数据矩阵, 一行代表一个国家, 每列对应一个指标
% s返回各行得分, w返回各列权重
[n,m]=size(x); % n=23个国家, m=5个指标
%% 数据的归一化处理
% Matlab2010b,2011a,b版本都有bug,需如下处理. 其它版本直接用[X,ps]=mapminmax(x',0,1);即可
[X,ps]=mapminmax(x');
ps.ymin=0.002; % 归一化后的最小值
ps.ymax=0.996; % 归一化后的最大值
ps.yrange=ps.ymax-ps.ymin; % 归一化后的极差,若不调整该值, 则逆运算会出错
X=mapminmax(x',ps);
% mapminmax('reverse',xx,ps); % 反归一化, 回到原数据
X=X';  % X为归一化后的数据, 23行(国家), 5列(指标)
%% 计算第j个指标下，第i个记录占该指标的比重p(i,j)
for i=1:n
    for j=1:m
        p(i,j)=X(i,j)/sum(X(:,j));
    end
end
%% 计算第j个指标的熵值e(j)
k=1/log(n);
for j=1:m
    e(j)=-k*sum(p(:,j).*log(p(:,j)));
end
d=ones(1,m)-e;  % 计算信息熵冗余度
w=d./sum(d);    % 求权值w
s=w*p';         % 求综合得分[\code]

测试程序：

data.txt 数据如下：
114.6 1.1 0.71 85.0 346 
55.3 0.96 0.4 69.0 300
132.4 0.97 0.54 73.0 410 
152.1 1.04 0.49 77.0 433
103.5 0.96 0.66 67.0 385 
81.0 1.08 0.54 96.0 336
179.3 0.88 0.59 89.0 446 
29.8 0.83 0.49 120.0 289
92.7 1.15 0.44 154.0 300 
248.6 0.79 0.5 147.0 483
115.0 0.74 0.65 252.0 453 
64.9 0.59 0.5 167.0 402
163.6 0.85 0.58 220.0 495 
95.7 1.02 0.48 160.0 384
139.5 0.70 0.59 217.0 478 
89.9 0.96 0.39 105.0 314
76.7 0.95 0.51 162.0 341 
121.8 0.83 0.60 140.0 401
42.1 1.08 0.47 110.0 326 
78.5 0.89 0.44 94.0 280
77.8 1.19 0.57 91.0 364 
90.0 0.95 0.43 89.0 301
100.6 0.82 0.59 83.0 456

执行代码：
[code]x=load('data.txt');  % 读入数据
[s,w]=shang(x)[\code]

运行结果：
s =

  Columns 1 through 9

    0.0431    0.0103   0.0371    0.0404    0.0369    0.0322   0.0507    0.0229    0.0397

  Columns 10 through 18

    0.0693    0.0878   0.0466    0.0860    0.0503    0.0800   0.0234    0.0456    0.0536

  Columns 19 through 23

    0.0272    0.0181   0.0364    0.0202    0.0420


w =

    0.1660    0.0981   0.1757    0.3348    0.2254